---
- name: Create DB for service
  mysql_db:
    login_user: "{{ galera_root_user }}"
    login_password: "{{ galera_root_password }}"
    login_host: "{{ database_address }}"
    name: "{{ keystone_database_name }}"
    state: "present"
  delegate_to: "{{ keystone_db_setup_host }}"
  run_once: true
  no_log: True

- name: Grant access to the DB for the service
  mysql_user:
    login_user: "{{ galera_root_user }}"
    login_password: "{{ galera_root_password }}"
    login_host: "{{ database_address }}"
    name: "{{ keystone_database_user }}"
    password: "{{ keystone_database_password }}"
    host: "{{ item }}"
    state: "present"
    priv: "{{ keystone_database_name }}.*:ALL"
  delegate_to: "{{ keystone_db_setup_host }}"
  run_once: true
  with_items:
    - "localhost"
    - "%"
  no_log: True

- name: Check current state of Keystone DB
  command: "{{ keystone_bin }}/keystone-manage db_sync --check"
  become: yes
  become_user: "{{ keystone_system_user_name }}"
  register: keystone_db_sync_check
  failed_when: "keystone_db_sync_check.rc == 1"
  changed_when: "keystone_db_sync_check.rc not in [2, 3, 4]"
  run_once: yes

#- name: Set the db sync local facts
#  ini_file:
#    path: "/etc/ansible/facts.d/openstack_ansible.fact"
#    section: keystone
#    option: "{{ item.name }}"
#    value: "{{ item.state }}"
#  with_items:
#    - name: "need_db_expand"
#      state: "{{ (keystone_db_sync_check.rc | int == 2) | bool }}"
#    - name: "need_db_migrate"
#      state: "{{ (keystone_db_sync_check.rc | int in [2, 3] ) | bool }}"
#    - name: "need_db_contract"
#      state: "{{ (keystone_db_sync_check.rc | int in [2, 3, 4]) | bool }}"
#
#- name: Refresh local facts
#  setup:
#    filter: ansible_local
#    gather_subset: "!all"
- name: Set the db sync facts
  set_fact:
    "{{ item.name }}": "{{ item.state }}"
  with_items:
    - name: "keystone_need_db_expand"
      state: "{{ (keystone_db_sync_check.rc | int == 2) | bool }}"
    - name: "keystone_need_db_migrate"
      state: "{{ (keystone_db_sync_check.rc | int in [2, 3] ) | bool }}"
    - name: "keystone_need_db_contract"
      state: "{{ (keystone_db_sync_check.rc | int in [2, 3, 4]) | bool }}"

- name: Stop httpd service
  service:
    name: httpd
    state: stopped
  register: stop_httpd
  until: stop_httpd is success
  retries: 5
  delay: 3
  notify: Restart httpd server
  when: (keystone_need_db_expand | bool) or
        (keystone_need_db_migrate | bool) or
        (keystone_need_db_contract | bool)

- name: Perform a Keystone DB sync expand
  command: "{{ keystone_bin }}/keystone-manage db_sync --expand"
  become: yes
  become_user: "{{ keystone_system_user_name }}"
  when: keystone_need_db_expand | bool
  run_once: yes
  notify: Restart httpd server

- name: Perform a Keystone DB sync migrate
  command: "{{ keystone_bin }}/keystone-manage db_sync --migrate"
  become: yes
  become_user: "{{ keystone_system_user_name }}"
  when: keystone_need_db_migrate | bool
  run_once: yes
  notify: Restart httpd server

- name: Perform a Keystone DB sync contract
  command: "{{ keystone_bin }}/keystone-manage db_sync --contract"
  become: yes
  become_user: "{{ keystone_system_user_name }}"
  when: keystone_need_db_contract | bool
  run_once: yes
  notify: Restart httpd server
